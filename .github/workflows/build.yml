name: Cross-platform Build and Release

env:
  ProductName: libhv

on:
  push:
     tags:
      - build_*

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      if: matrix.os == 'windows-latest'
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        platforms: ${{ matrix.os }}/${{ matrix.arch }}
        tags: your-dockerhub-username/libhv:${{ matrix.os }}-${{ matrix.arch }}

    - name: Download the Docker image
      uses: docker/setup-buildx-action@v1
    - name: Build dynamic library for Linux/MacOS/Windows
      if: matrix.os != 'android-latest' && matrix.os != 'ios-latest'
      run: |
        docker run --rm -v $(pwd):/home/hv my-dockerhub-username/libhv:${{ matrix.os }}-${{ matrix.arch }} /bin/bash -c "cd /home/hv && cmake -B build && cmake --build build"

    - name: Upload dynamic library as release asset
      if: matrix.os != 'android-latest' && matrix.os != 'ios-latest'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/libhv.so # Update file name for Windows or MacOS if needed
        asset_name: libhv_${{ matrix.os }}_${{ matrix.arch }}.so # Update file extension for Windows or MacOS if needed
        asset_content_type: application/x-sharedlib
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build dynamic library for Android
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker run --rm -v $(pwd):/home/hv my-dockerhub-username/libhv:ubuntu-latest-x64 /bin/bash -c "cd /home/hv && ./build_android.sh"

    - name: Build dynamic library for iOS
      if: matrix.os == 'macos-latest'
      run: |
        docker run --rm -v $(pwd):/home/hv my-dockerhub-username/libhv:macos-latest-x64 /bin/bash -c "cd /home/hv && ./build_ios.sh"

    - name: Create release
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref }}
        tag_name: ${{ github.ref }}
        body: Automated release ${{ github.ref }}
        assets: |
          build/libhv_linux_x64.so
          build/libhv_macos_x64.dylib
          build/libhv_windows_x64.dll
          build/libhv_android_arm64-v8a.so
          build/libhv_ios_arm64.so
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

