name: build

env:
  ProductName: libhv

on:
  push:
    tags:
      - 'build_*'

jobs:
  CreateRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: GitHub Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    needs: CreateRelease
    steps:
      - uses: actions/checkout@v3

      - name: build
        run: |
          cd libhv
          sudo apt update
          sudo apt install libssl-dev libnghttp2-dev
          ./configure --with-openssl --with-nghttp2
          make libhv evpp
      
      - name: test
        run: |
          make check
          make run-unittest

  build-windows:
    name: build-windows
    runs-on: windows-latest
    needs: CreateRelease
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: |
          git submodule update --init && cd libhv && mkdir cmake-build-win64 && cd cmake-build-win64 && cmake .. -G "Visual Studio 17 2022" -A x64 && cmake --build .

  build-apple:
    name: build-apple
    runs-on: macos-latest
    needs: CreateRelease
    steps:
      - uses: actions/checkout@v3

      - name: build-mac
        run: |
          git submodule update --init \
          && cd libhv \
          && ./configure \
          && make libhv evpp examples unittest

      - name: build-ios
        run: |
          git submodule update --init \
          && cd libhv \
          && mkdir cmake-build-ios \
          && cd cmake-build-ios \
          && cmake .. -G Xcode -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=OS -DDEPLOYMENT_TARGET=9.0 -DARCHS="arm64" \
          && cmake --build . --target hv_static --config Release

