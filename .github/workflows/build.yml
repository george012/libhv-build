name: build

env:
  ProductName: libhv

on:
  push:
    tags:
      - 'build_*'

jobs:
  CreateRelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: GitHub Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    needs: CreateRelease
    steps:
      - uses: actions/checkout@v3

      - name: Make Release Dir
        run: |
          mkdir -p release

      - name: build
        run: |
          git submodule update --init \
          && cd libhv \
          && sudo apt update \
          && sudo apt install libssl-dev libnghttp2-dev \
          && ./configure --with-openssl --with-nghttp2 \
          && make libhv evpp \
          && mkdir -p libhv_linux/include \
          && mkdir -p libhv_linux/lib \
          && mv ./include/hv/* libhv_linux/include \
          && mv ./lib/* libhv_linux/lib \
          && mv ./libhv_linux ../release

      - name: test
        run: |
          cd libhv \
          && make check \
          && make run-unittest

      - name: Upload release binaries
        uses: alexellis/upload-assets@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./release/*"]'

  build-windows:
    name: build-windows
    runs-on: windows-latest
    needs: CreateRelease
    steps:
      - uses: actions/checkout@v3

      - name: Make Release Dir
        run: |
          mkdir -p release

      - name: build
        run: |
          git submodule update --init && cd libhv && mkdir cmake-build-win64 && cd cmake-build-win64 && cmake .. -G "Visual Studio 17 2022" -A x64 && cmake --build . && mkdir -p libhv_windows/include && mkdir -p libhv_windows/lib && mv ./include/hv/* libhv_windows/include && mv ./bin/* libhv_windows/lib && mv ./libhv_windows ../release

      - name: Upload release binaries
        uses: alexellis/upload-assets@latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./release/*"]'

  build-apple:
    name: build-apple
    runs-on: macos-latest
    needs: CreateRelease
    steps:
      - uses: actions/checkout@v3

      - name: Make Release Dir
        run: |
          mkdir -p release

      - name: build-mac
        run: |
          git submodule update --init \
          && cd libhv \
          && ./configure \
          && make libhv evpp examples unittest \
          && mkdir -p libhv_mac/include \
          && mkdir -p libhv_mac/lib \
          && mv ./include/hv/* libhv_mac/include \
          && mv ./lib/* libhv_mac/lib \
          && mv ./libhv_mac ../release

      - name: build-ios
        run: |
          git submodule update --init \
          && cd libhv \
          && mkdir cmake-build-ios \
          && cd cmake-build-ios \
          && cmake .. -G Xcode -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=OS -DDEPLOYMENT_TARGET=9.0 -DARCHS="arm64" \
          && cmake --build . --target hv_static --config Release \
          && mkdir -p libhv_ios/include \
          && mkdir -p libhv_ios/lib \
          && mv ./include/hv/* libhv_ios/include \
          && mv ./lib/* libhv_ios/lib \
          && mv ./libhv_mac ../release

      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./release/*
      #     asset_content_type: application/zip

      - name: Upload release binaries
        uses: alexellis/upload-assets@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./release/*"]'
#          asset_paths: '["./bin/release-it-darwin", "./bin/release-it-amd64", "./bin/release-it-arm", "./bin/release-it-arm64", "./bin/release-it.exe"]'
